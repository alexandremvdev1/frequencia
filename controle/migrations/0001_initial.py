# Generated by Django 5.2.3 on 2025-08-21 01:44

import cloudinary.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Feriado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField(unique=True)),
                ('descricao', models.CharField(max_length=100)),
                ('sabado_letivo', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('data',),
            },
        ),
        migrations.CreateModel(
            name='Prefeitura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, unique=True)),
                ('cnpj', models.CharField(blank=True, max_length=18, null=True, unique=True)),
                ('cidade', models.CharField(blank=True, max_length=100, null=True)),
                ('uf', models.CharField(blank=True, max_length=2, null=True)),
                ('endereco', models.CharField(blank=True, max_length=255, null=True)),
                ('numero', models.CharField(blank=True, max_length=20, null=True)),
                ('bairro', models.CharField(blank=True, max_length=100, null=True)),
                ('telefone', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('logo', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='Logo da prefeitura')),
            ],
            options={
                'verbose_name': 'Prefeitura',
                'verbose_name_plural': 'Prefeituras',
                'ordering': ('nome',),
            },
        ),
        migrations.CreateModel(
            name='SabadoLetivo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField(unique=True)),
                ('descricao', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'ordering': ('data',),
            },
        ),
        migrations.CreateModel(
            name='Funcionario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('matricula', models.CharField(max_length=20, unique=True)),
                ('cargo', models.CharField(max_length=50)),
                ('funcao', models.CharField(max_length=50)),
                ('data_admissao', models.DateField()),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('cpf', models.CharField(blank=True, max_length=14, null=True, unique=True)),
                ('rg', models.CharField(blank=True, max_length=20, null=True)),
                ('pis', models.CharField(blank=True, max_length=20, null=True)),
                ('titulo_eleitor', models.CharField(blank=True, max_length=20, null=True)),
                ('ctps_numero', models.CharField(blank=True, max_length=20, null=True)),
                ('ctps_serie', models.CharField(blank=True, max_length=10, null=True)),
                ('telefone', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('endereco', models.CharField(blank=True, max_length=255, null=True)),
                ('numero', models.CharField(blank=True, max_length=10, null=True)),
                ('bairro', models.CharField(blank=True, max_length=100, null=True)),
                ('cidade', models.CharField(blank=True, max_length=100, null=True)),
                ('uf', models.CharField(blank=True, max_length=2, null=True)),
                ('cep', models.CharField(blank=True, max_length=10, null=True)),
                ('estado_civil', models.CharField(blank=True, max_length=20, null=True)),
                ('escolaridade', models.CharField(blank=True, max_length=100, null=True)),
                ('tem_planejamento', models.BooleanField(default=False)),
                ('horario_planejamento', models.CharField(blank=True, max_length=50, null=True)),
                ('sabado_letivo', models.BooleanField(default=False)),
                ('foto', models.ImageField(blank=True, null=True, upload_to='fotos_funcionarios/')),
                ('turma', models.CharField(blank=True, choices=[('A', 'Turma A'), ('B', 'Turma B'), ('C', 'Turma C'), ('D', 'Turma D'), ('E', 'Turma E'), ('F', 'Turma F'), ('G', 'Turma G')], max_length=10, null=True)),
                ('turno', models.CharField(blank=True, choices=[('Matutino', 'Matutino'), ('Vespertino', 'Vespertino'), ('Noturno', 'Noturno'), ('Integral', 'Integral')], max_length=20, null=True)),
                ('serie', models.CharField(blank=True, choices=[('1º ANO', '1º ANO'), ('2º ANO', '2º ANO'), ('3º ANO', '3º ANO'), ('4º ANO', '4º ANO'), ('5º ANO', '5º ANO'), ('6º ANO', '6º ANO'), ('7º ANO', '7º ANO'), ('8º ANO', '8º ANO'), ('9º ANO', '9º ANO')], max_length=20, null=True)),
                ('tipo_vinculo', models.CharField(blank=True, choices=[('Efetivo', 'Efetivo'), ('Contratado', 'Contratado')], max_length=20, null=True)),
                ('fonte_pagadora', models.CharField(blank=True, max_length=100, null=True)),
                ('inicio_ferias', models.DateField(blank=True, null=True)),
                ('fim_ferias', models.DateField(blank=True, null=True)),
                ('is_chefe_setor', models.BooleanField(default=False, verbose_name='Chefe do setor')),
                ('chefe_setor_desde', models.DateField(blank=True, null=True, verbose_name='Chefe desde')),
                ('user', models.OneToOneField(blank=True, help_text='Vínculo opcional com usuário do sistema.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='funcionario', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('nome',),
            },
        ),
        migrations.CreateModel(
            name='HorarioTrabalho',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('turno', models.CharField(choices=[('Manhã', 'Manhã'), ('Tarde', 'Tarde')], max_length=10)),
                ('horario_inicio', models.TimeField(blank=True, null=True)),
                ('horario_fim', models.TimeField(blank=True, null=True)),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='controle.funcionario')),
            ],
        ),
        migrations.CreateModel(
            name='Secretaria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
                ('cnpj', models.CharField(blank=True, max_length=18, null=True)),
                ('telefone', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('logo', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='Logo da secretaria')),
                ('prefeitura', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='secretarias', to='controle.prefeitura')),
            ],
            options={
                'verbose_name': 'Secretaria',
                'verbose_name_plural': 'Secretarias',
                'ordering': ('prefeitura__nome', 'nome'),
                'unique_together': {('prefeitura', 'nome')},
            },
        ),
        migrations.CreateModel(
            name='Orgao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
                ('cnpj', models.CharField(blank=True, max_length=18, null=True)),
                ('telefone', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('logo', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='Logo do órgão')),
                ('secretaria', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orgaos', to='controle.secretaria')),
            ],
            options={
                'verbose_name': 'Órgão vinculado',
                'verbose_name_plural': 'Órgãos vinculados',
                'ordering': ('secretaria__prefeitura__nome', 'secretaria__nome', 'nome'),
                'unique_together': {('secretaria', 'nome')},
            },
        ),
        migrations.CreateModel(
            name='Setor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('chefe', models.ForeignKey(blank=True, help_text='Servidor que exerce a chefia deste setor.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chefias_de_setor', to='controle.funcionario')),
                ('orgao', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='setores', to='controle.orgao')),
                ('prefeitura', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='setores', to='controle.prefeitura')),
                ('secretaria', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='setores', to='controle.secretaria')),
            ],
            options={
                'verbose_name': 'Setor',
                'verbose_name_plural': 'Setores',
                'ordering': ('nome',),
            },
        ),
        migrations.CreateModel(
            name='RecessoFuncionario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_inicio', models.DateField()),
                ('data_fim', models.DateField()),
                ('motivo', models.CharField(blank=True, max_length=120, null=True)),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recessos', to='controle.funcionario')),
                ('setor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recessos', to='controle.setor')),
            ],
            options={
                'verbose_name': 'Recesso de Funcionário',
                'verbose_name_plural': 'Recessos de Funcionários',
            },
        ),
        migrations.AddField(
            model_name='funcionario',
            name='setor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='controle.setor'),
        ),
        migrations.CreateModel(
            name='FuncaoPermissao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_funcao', models.CharField(max_length=50)),
                ('nivel', models.CharField(choices=[('LEITURA', 'Leitura'), ('GERENCIA', 'Gerenciar (CRUD)')], default='LEITURA', max_length=16)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permissoes_funcao', to=settings.AUTH_USER_MODEL)),
                ('orgao', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='permissoes_funcao', to='controle.orgao')),
                ('secretaria', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='permissoes_funcao', to='controle.secretaria')),
                ('setor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='permissoes_funcao', to='controle.setor')),
            ],
            options={
                'verbose_name': 'Permissão por Função',
                'verbose_name_plural': 'Permissões por Função',
            },
        ),
        migrations.CreateModel(
            name='AcessoSetor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nivel', models.CharField(choices=[('LEITURA', 'Leitura'), ('GERENCIA', 'Gerenciar (CRUD)')], default='LEITURA', max_length=16)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='acessos_setor', to=settings.AUTH_USER_MODEL)),
                ('setor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='acessos_setor', to='controle.setor')),
            ],
            options={
                'verbose_name': 'Acesso a Setor',
                'verbose_name_plural': 'Acessos a Setores',
            },
        ),
        migrations.CreateModel(
            name='UserScope',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nivel', models.CharField(choices=[('LEITURA', 'Leitura'), ('GERENCIA', 'Gerenciar (CRUD)')], default='LEITURA', max_length=16)),
                ('orgao', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='scopes', to='controle.orgao')),
                ('prefeitura', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='scopes', to='controle.prefeitura')),
                ('secretaria', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='scopes', to='controle.secretaria')),
                ('setor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='scopes', to='controle.setor')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scopes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Escopo de Usuário',
                'verbose_name_plural': 'Escopos de Usuário',
            },
        ),
        migrations.CreateModel(
            name='FolhaFrequencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mes', models.IntegerField()),
                ('ano', models.IntegerField()),
                ('data_geracao', models.DateTimeField(auto_now_add=True)),
                ('html_armazenado', models.TextField()),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='controle.funcionario')),
            ],
            options={
                'ordering': ('funcionario__nome', 'ano', 'mes'),
                'unique_together': {('funcionario', 'mes', 'ano')},
            },
        ),
        migrations.CreateModel(
            name='AcessoOrgao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nivel', models.CharField(choices=[('LEITURA', 'Leitura'), ('GERENCIA', 'Gerenciar (CRUD)')], default='LEITURA', max_length=16)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='acessos_orgao', to=settings.AUTH_USER_MODEL)),
                ('orgao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='acessos_orgao', to='controle.orgao')),
            ],
            options={
                'verbose_name': 'Acesso a Órgão',
                'verbose_name_plural': 'Acessos a Órgãos',
                'unique_together': {('user', 'orgao')},
            },
        ),
        migrations.CreateModel(
            name='AcessoPrefeitura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nivel', models.CharField(choices=[('LEITURA', 'Leitura'), ('GERENCIA', 'Gerenciar (CRUD)')], default='LEITURA', max_length=16)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='acessos_prefeitura', to=settings.AUTH_USER_MODEL)),
                ('prefeitura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='acessos_prefeitura', to='controle.prefeitura')),
            ],
            options={
                'verbose_name': 'Acesso à Prefeitura',
                'verbose_name_plural': 'Acessos à Prefeitura',
                'unique_together': {('user', 'prefeitura')},
            },
        ),
        migrations.CreateModel(
            name='AcessoSecretaria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nivel', models.CharField(choices=[('LEITURA', 'Leitura'), ('GERENCIA', 'Gerenciar (CRUD)')], default='LEITURA', max_length=16)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='acessos_secretaria', to=settings.AUTH_USER_MODEL)),
                ('secretaria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='acessos_secretaria', to='controle.secretaria')),
            ],
            options={
                'verbose_name': 'Acesso à Secretaria',
                'verbose_name_plural': 'Acessos às Secretarias',
                'unique_together': {('user', 'secretaria')},
            },
        ),
        migrations.AddConstraint(
            model_name='setor',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(('prefeitura__isnull', False), ('secretaria__isnull', True), ('orgao__isnull', True)), models.Q(('prefeitura__isnull', True), ('secretaria__isnull', False), ('orgao__isnull', True)), models.Q(('prefeitura__isnull', True), ('secretaria__isnull', True), ('orgao__isnull', False)), _connector='OR'), name='setor_exact_one_parent'),
        ),
        migrations.AddConstraint(
            model_name='setor',
            constraint=models.UniqueConstraint(condition=models.Q(('prefeitura__isnull', False)), fields=('nome', 'prefeitura'), name='uniq_setor_nome_prefeitura'),
        ),
        migrations.AddConstraint(
            model_name='setor',
            constraint=models.UniqueConstraint(condition=models.Q(('secretaria__isnull', False)), fields=('nome', 'secretaria'), name='uniq_setor_nome_secretaria'),
        ),
        migrations.AddConstraint(
            model_name='setor',
            constraint=models.UniqueConstraint(condition=models.Q(('orgao__isnull', False)), fields=('nome', 'orgao'), name='uniq_setor_nome_orgao'),
        ),
        migrations.AddIndex(
            model_name='recessofuncionario',
            index=models.Index(fields=['funcionario', 'data_inicio', 'data_fim'], name='controle_re_funcion_44949d_idx'),
        ),
        migrations.AddIndex(
            model_name='recessofuncionario',
            index=models.Index(fields=['setor', 'data_inicio', 'data_fim'], name='controle_re_setor_i_e733a5_idx'),
        ),
        migrations.AddConstraint(
            model_name='funcionario',
            constraint=models.UniqueConstraint(condition=models.Q(('is_chefe_setor', True)), fields=('setor',), name='uniq_chefe_por_setor'),
        ),
        migrations.AlterUniqueTogether(
            name='funcaopermissao',
            unique_together={('user', 'nome_funcao', 'nivel', 'secretaria', 'orgao', 'setor')},
        ),
        migrations.AlterUniqueTogether(
            name='acessosetor',
            unique_together={('user', 'setor')},
        ),
        migrations.AddConstraint(
            model_name='userscope',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(('prefeitura__isnull', False), ('secretaria__isnull', True), ('orgao__isnull', True), ('setor__isnull', True)), models.Q(('prefeitura__isnull', True), ('secretaria__isnull', False), ('orgao__isnull', True), ('setor__isnull', True)), models.Q(('prefeitura__isnull', True), ('secretaria__isnull', True), ('orgao__isnull', False), ('setor__isnull', True)), models.Q(('prefeitura__isnull', True), ('secretaria__isnull', True), ('orgao__isnull', True), ('setor__isnull', False)), _connector='OR'), name='userscope_exact_one_target'),
        ),
        migrations.AlterUniqueTogether(
            name='userscope',
            unique_together={('user', 'prefeitura', 'secretaria', 'orgao', 'setor')},
        ),
    ]
